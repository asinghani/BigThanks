{"version":3,"sources":["meteor://ðŸ’»app/imports/api/items.js","meteor://ðŸ’»app/imports/api/organizations.js","meteor://ðŸ’»app/server/config/email.js","meteor://ðŸ’»app/server/config/reCaptcha.js","meteor://ðŸ’»app/server/config/security.js","meteor://ðŸ’»app/server/methods/organization.js","meteor://ðŸ’»app/server/methods/user.js","meteor://ðŸ’»app/server/entry.js","meteor://ðŸ’»app/universal/config/accounts.js","meteor://ðŸ’»app/universal/routes/accounts.js","meteor://ðŸ’»app/universal/routes/organization.js","meteor://ðŸ’»app/universal/routes/public.js","meteor://ðŸ’»app/universal/routes/user.js","meteor://ðŸ’»app/universal/util/layout.js","meteor://ðŸ’»app/universal/config.js","meteor://ðŸ’»app/universal/debug.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from \"meteor/mongo\";\n\nexport const Items = new Mongo.Collection(\"items\");\n\nif(Meteor.isServer) {\n\n    Meteor.methods({\n        \"purchase\"(id){\n            if (!Meteor.userId()) {\n                throw new Meteor.Error(\"not-authorized\");\n            }\n\n            if (!id) {\n                throw new Meteor.Error(\"invalid-args\");\n            }\n\n            let item = Items.find({_id: new Mongo.ObjectID(id)}).fetch()[0];\n            let code = item.codes[0];\n\n            if(!item || !code || item.stock === 0 || item.codes.length === 0){\n                throw new Meteor.Error(\"invalid-action\");\n            }\n\n            Items.update({ _id: new Mongo.ObjectID(id) }, {$pull: { codes: code }, $inc: { stock: -1 }});\n\n            Meteor.users.update({ _id: Meteor.userId()}, {$inc: {\n                \"profile.credits\": 0 - parseInt(item.cost)\n            }});\n\n\n            let url = generateBarcode(code);\n\n            let emailMsg = `\n                Below is your e-voucher for the ${item.name} that you purchased on Big Thanks\n                <hr>\n                <span style=\"font-weight:bold;\">Credits Spent: </span>\n                ${item.cost}\n                <br>\n                <br>\n                <span style=\"font-weight:bold;\">Code: </span>\n                ${code}\n                <br>\n                <img src=\"${url}\">\n                <br>\n                <br>\n                This item was sponsored by <a href=\"${item.website}\">${item.sponsor}</a>\n                <br>\n                <br>\n                Please do not reply to this email\n            `;\n\n\n            Email.send({\n                from: Meteor.settings.private.email.no_reply,\n                to: Meteor.user().emails[0].address,\n                subject: \"Big Thanks: Your \"+item.name,\n                html: emailMsg\n            });\n        }\n    });\n\n    var AWS = Npm.require(\"aws-sdk\");\n    var barcodeGenerate = Npm.require(\"barcode\");\n    AWS.config.region = \"us-west-2\";\n\n    var generateBarcode = function (code) {\n        let barcode = barcodeGenerate(\"code39\", {\n            data: code+\"\",\n            width: 350,\n            height: 100\n        });\n        let getStream = Meteor.wrapAsync(barcode.getStream, barcode);\n        let body = getStream();\n        let s3 = new AWS.S3({params: {Bucket: \"bigthanksassets\", Key: code+\".png\"}});\n        let upload = Meteor.wrapAsync(s3.upload, s3);\n        try{\n            return upload({Body: body, ACL: \"public-read\"}).Location;\n        } catch (e) {\n            return \"\";\n        }\n    };\n\n    Meteor.publish(\"items\", function () {\n        if(this.userId){\n            return Items.find({}, {instructions: 0, codes: 0});\n        }\n    });\n}","import { Mongo } from \"meteor/mongo\";\n\nexport const Organizations = new Mongo.Collection(\"organizations\");\n\nif(Meteor.isServer) {\n    Meteor.methods({\n        /**\n         * Delete volunteer opportunity\n         *\n         * Required permission: Organization Opportunities\n         */\n        \"opportunity.delete\"(id){\n            if (!id) {\n                throw new Meteor.Error(\"invalid-args\");\n            }\n\n            if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), [\"organization_admin\", \"organization_opportunities\"])) {\n                throw new Meteor.Error(\"not-authorized\");\n            }\n\n            Organizations.update({_id: new Mongo.ObjectID(Meteor.user().profile.organization), \"opportunities._id\": id}, {\n                $set: {\"opportunities.$.deleted\": true }\n            });\n        },\"opportunity.update\"(id, opportunity){\n            if (!id || !opportunity) {\n                throw new Meteor.Error(\"invalid-args\");\n            }\n\n            if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), [\"organization_admin\", \"organization_opportunities\"])) {\n                throw new Meteor.Error(\"not-authorized\");\n            }\n\n            Organizations.update({_id: new Mongo.ObjectID(Meteor.user().profile.organization), \"opportunities._id\": id}, {\n                $set: {\"opportunities.$\": opportunity }\n            });\n        },\"opportunity.insert\"(opportunity){\n            if (!opportunity) {\n                throw new Meteor.Error(\"invalid-args\");\n            }\n\n            if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), [\"organization_admin\", \"organization_opportunities\"])) {\n                throw new Meteor.Error(\"not-authorized\");\n            }\n\n            opportunity._id = new Mongo.ObjectID()._str;\n            Organizations.update({_id: new Mongo.ObjectID(Meteor.user().profile.organization)}, {\n                $push: {\"opportunities\": opportunity }\n            });\n        },\"opportunity.register\"(organization, opportunity){\n            if (!organization || !opportunity) {\n                throw new Meteor.Error(\"invalid-args\");\n            }\n\n            if (!Meteor.userId()) {\n                throw new Meteor.Error(\"not-authorized\");\n            }\n\n            let email = Meteor.user().emails[0].address;\n\n            if(Organizations.find({_id: new Mongo.ObjectID(organization), \"opportunities._id\": opportunity,\n                    \"opportunities.registrations.email\": email}).fetch().length > 0){\n                return;\n            }\n\n            Organizations.update({_id: new Mongo.ObjectID(organization), \"opportunities._id\": opportunity}, {\n                $push: {\"opportunities.$.registrations\": {\n                    _id: new Mongo.ObjectID()._str,\n                    name: Meteor.user().profile.name,\n                    email: email,\n                    timestamp: moment().unix()\n                }}\n            });\n        }\n    });\n}\n","Meteor.startup(() => {\n    process.env.MAIL_URL = Meteor.settings.private.email.mail_url;\n\n    SSR.compileTemplate(\"testEmail\", Assets.getText(\"templates/email/password-reset.html\"));\n\n    Accounts.emailTemplates.from = Meteor.settings.private.email.no_reply;\n\n    Accounts.emailTemplates.resetPassword.subject = () => { return \"Reset password on Big Thanks\"; };\n    Accounts.emailTemplates.resetPassword.html = (user, url) => {\n        return SSR.render(\"testEmail\", {url: url});\n    };\n\n});","AccountsTemplates.configure({\n    reCaptcha: {\n        secretKey: Meteor.settings.private.reCaptcha.secretKey\n    }\n});","export default (BrowserPolicy) => {\n    BrowserPolicy.content.allowOriginForAll(\"*.googleapis.com\");\n    BrowserPolicy.content.allowOriginForAll(\"*.gstatic.com\");\n    BrowserPolicy.content.allowOriginForAll(\"*.bootstrapcdn.com\");\n    BrowserPolicy.content.allowOriginForAll(\"*.google.com\");\n    BrowserPolicy.content.allowOriginForAll(\"cdn.jsdelivr.net\");\n    BrowserPolicy.content.allowFontDataUrl();\n\n    BrowserPolicy.content.disallowInlineScripts();\n    BrowserPolicy.content.disallowConnect();\n\n    let root = __meteor_runtime_config__.ROOT_URL;\n    BrowserPolicy.content.allowConnectOrigin(root);\n    BrowserPolicy.content.allowConnectOrigin(root.replace(\"http\", \"https\"));\n    BrowserPolicy.content.allowConnectOrigin(root.replace(/http(s?)/, \"ws$1\"));\n\n    BrowserPolicy.content.allowConnectOrigin(\"http://bigthanks.dev\");\n    BrowserPolicy.content.allowConnectOrigin(\"https://bigthanks.dev\");\n    BrowserPolicy.content.allowConnectOrigin(\"ws://bigthanks.dev\");\n    BrowserPolicy.content.allowConnectOrigin(\"wss://bigthanks.dev\");\n    BrowserPolicy.content.allowConnectOrigin(\"https://enginex.kadira.io\");\n\n    BrowserPolicy.content.allowImageOrigin(\"*\"); // Allow organization logos\n};\n\nMeteor.startup(() => {\n    Meteor.users.deny({\n        update: function() {\n            return true;\n        }\n    });\n\n    if(Meteor.isDevelopment){\n        SSL(\"./assets/app/bigthanks.dev.key\", \"./assets/app/bigthanks.dev.crt\", 443);\n    }\n});\n","import { Organizations } from \"/imports/api/organizations.js\";\n\nMeteor.methods({\n    /**\n     * Update organization settings\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.update\"(name, website, logo) {\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n        Organizations.update({_id: new Mongo.ObjectID(Meteor.user().profile.organization)}, {$set: {name: name, website: website, logo: logo}});\n    },\n\n    /**\n     * Reset password of user in organization\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.user.resetPassword\"(id) {\n        if (!id) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n        Accounts.sendResetPasswordEmail(id);\n    },\n\n    /**\n     * Get user object for specific user in organization\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.user.get\"(id, render){\n        if (!id) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        let user = Meteor.users.find({_id: id}).fetch()[0];\n        if (!user || !user.profile) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if(user.profile.organization !== Meteor.user().profile.organization){\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        return user;\n    },\n\n    /**\n     * Delete a user\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.user.delete\"(id){\n        if (!id) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        let user = Meteor.users.find({_id: id}).fetch()[0];\n        if (!user || !user.profile) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if(user.profile.organization !== Meteor.user().profile.organization){\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Meteor.users.remove({_id: id});\n\n        return true;\n    },\n\n    /**\n     * Change permissions of a user\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.user.permission.set\"(id, permission){\n        if (!id || !permission) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        let user = Meteor.users.find({_id: id}).fetch()[0];\n        if (!user || !user.profile) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n        if(user.profile.organization !== Meteor.user().profile.organization){\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Roles.removeUsersFromRoles(id, [\"organization_opportunities\", \"organization_admin\", \"organization_validate\"]);\n        switch(permission){\n\n        case \"admin\":\n            Roles.addUsersToRoles(id, \"organization_admin\");\n            break;\n        case \"opportunities\":\n            Roles.addUsersToRoles(id, \"organization_opportunities\");\n            break;\n        case \"validate\":\n            Roles.addUsersToRoles(id, \"organization_validate\");\n            break;\n        case \"opportunities_validate\":\n            Roles.addUsersToRoles(id, \"organization_opportunities\");\n            Roles.addUsersToRoles(id, \"organization_validate\");\n            break;\n\n        }\n        return true;\n    },\n\n    /**\n     * Add a user to organization\n     *\n     * Required Permission: Organization Admin\n     */\n    \"organization.user.add\"(email, name){\n\n        if (!email) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n\n        if(!name || name.length == 0) {\n            name = email.split(\"@\")[0];\n        }\n\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), \"organization_admin\")) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Accounts.createUser({\n            email: email,\n            profile: {\n                name: name,\n                organization: Meteor.user().profile.organization,\n                firstLogin: true\n            }\n        });\n\n        let id = Accounts.findUserByEmail(email)._id;\n\n        if (!id) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n\n        Accounts.sendEnrollmentEmail(id);\n\n        let user = Meteor.users.find({_id: id}).fetch()[0];\n        if (!user || !user.profile) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n\n        Organizations.update({ _id: new Mongo.ObjectID(Meteor.user().profile.organization) }, {$push: {\n            users: id\n        }});\n\n        Roles.addUsersToRoles(id, \"organization\");\n        Roles.addUsersToRoles(id, \"organization_opportunities\");\n        Roles.addUsersToRoles(id, \"organization_validate\");\n    },\n\n    /**\n     * Confirm/Deny credit request\n     *\n     * Required Permission: Organization Validate\n     */\n    \"organization.request.confirm\" (userId, organizationId, reqId, status, comment, length){\n\n        if (!userId || !organizationId || !reqId || !status || !length) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n\n        if (!Meteor.userId() || !Roles.userIsInRole(Meteor.userId(), [\"organization_admin\", \"organization_validate\"])) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        if(organizationId !== Meteor.user().profile.organization){\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        let user = Meteor.users.find({_id: userId}).fetch()[0];\n        if (!user || !user.profile) {\n            throw new Meteor.Error(\"invalid-args\");\n        }\n\n        let oldCredits = parseInt(Meteor.users.find({_id: userId}).fetch()[0].profile.credits);\n        let totalTime = parseInt(Meteor.users.find({_id: userId}).fetch()[0].profile.totalHours);\n\n        length = parseInt(length);\n        if(status == 2) length = 0;\n\n        Meteor.users.update({ _id: userId, \"profile.history._id\": reqId}, {$set: {\n            \"profile.history.$.status\": status,\n            \"profile.history.$.comment\": comment,\n            \"profile.history.$.new\": true\n        }, $inc: {\n            \"profile.credits\": length,\n            \"profile.totalHours\": Math.ceil(length/60)\n        }});\n\n        Organizations.update({ _id: new Mongo.ObjectID(organizationId) }, {$pull: {\n            requests: {\n                _id: reqId\n            }\n        }});\n    }\n});","import { Organizations } from \"/imports/api/organizations.js\";\nimport { Email } from \"meteor/email\";\n\nMeteor.methods({\n\n    /**\n     * Mark a history item / validation as already viewed\n     */\n    \"user.history.resetNew\"(id) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n        Meteor.users.update({_id: Meteor.userId(), \"profile.history._id\" : id}, {$set: {\"profile.history.$.new\": false}});\n    },\n\n    /**\n     * Send a credit validation request\n     */\n    \"request.send\"(opportunityName, time, organizationId){\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        let id = new Mongo.ObjectID()._str;\n        let timestamp = moment().unix();\n        Meteor.users.update({ _id: Meteor.userId() }, {$push: {\n            \"profile.history\": {\n                _id: id,\n                timestamp: timestamp,\n                opportunity: opportunityName,\n                length: time,\n                credits: time,\n                validator: organizationId,\n                status: 0,\n                new: false,\n                comment: \"\"\n            }\n        }});\n        Organizations.update({ _id: new Mongo.ObjectID(organizationId) }, {$push: {\n            requests: {\n                _id: id,\n                userId: Meteor.userId(),\n                reqId: id,\n                name: opportunityName,\n                time: time,\n                timestamp: timestamp,\n                userName: Meteor.user().profile.name\n            }\n        }});\n    },\n\n    /**\n     * Update user's name\n     */\n    \"user.updateName\"(name) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        if(!name){\n            throw new Meteor.Error(\"invalid-args\")\n        }\n\n        Meteor.users.update({_id: Meteor.userId()}, {$set: {\"profile.name\": name}});\n    },\n\n    /**\n     * Send reset password email\n     */\n    \"user.resetPassword\"() {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Accounts.sendResetPasswordEmail(Meteor.userId());\n    },\n\n    /**\n     * Contact form submitted\n     */\n    \"contact.submit\"(name, email, subject, message){\n        let confirmation = `\n            Big Thanks contact form has been submitted. You will receive a reply in 1-2 business days.\n            <h3>Submitted Information:</h3>\n            <hr>\n            <span style=\"font-weight:bold;\">Name</span>\n            <br>\n            ${name}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Email</span>\n            <br>\n            ${email}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Subject</span>\n            <br>\n            ${subject}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Message</span>\n            <br>\n            ${message}\n            <br>\n            <br>\n            Please do not reply to this email.\n        `;\n\n        let emailMsg = `\n            Big Thanks contact form was submitted.\n            <h3>Submitted Information:</h3>\n            <hr>\n            <span style=\"font-weight:bold;\">Name</span>\n            <br>\n            ${name}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Email</span>\n            <br>\n            ${email}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Subject</span>\n            <br>\n            ${subject}\n            <br>\n            <br>\n            <span style=\"font-weight:bold;\">Message</span>\n            <br>\n            ${message}\n            <br>\n        `;\n\n        Email.send({\n            from: Meteor.settings.private.email.no_reply,\n            to: email,\n            replyTo: Meteor.settings.private.email.contact,\n            subject: \"Contact form submitted\",\n            html: confirmation\n        });\n\n        Email.send({\n            from: name+\" <\"+email+\">\",\n            to: Meteor.settings.private.email.contact,\n            replyTo: email,\n            subject: \"Contact Form: \"+subject,\n            html: emailMsg\n        });\n\n    },\n\n    /**\n     * Initial Tour Ended, reset firstLogin flag\n     *\n     */\n    \"user.tour.ended\"(){\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n        Meteor.users.update({_id: Meteor.userId()}, {$set: {\"profile.firstLogin\": false}});\n    },\n\n    /**\n     * Restart the tour for user\n     */\n    \"user.tour.restart\"(){\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-authorized\");\n        }\n        Meteor.users.update({ _id: Meteor.userId()}, {$set: { \"profile.firstLogin\": true }});\n    }\n});","import setupAccounts from \"../universal/config/accounts.js\";\nimport setupBrowserPolicy from \"./config/security.js\";\nimport { Organizations } from \"../imports/api/organizations.js\";\nimport { Items } from \"/imports/api/items.js\";\n\nsetupBrowserPolicy(BrowserPolicy);\nsetupAccounts();\n\n// Extra debug code\nimport setupDebug from \"../universal/debug.js\";\nif(Meteor.isDevelopment){\n    setupDebug();\n}\n\nKadira.connect(Meteor.settings.private.kadira.appId, Meteor.settings.private.kadira.appSecret);\n\n//Picker.route('/', function(params, req, res, next) {\n//    res.end(\"cow\");\n//});\n","export default () => {\n    AccountsTemplates.configure({\n        defaultLayout: \"publicLayout\",\n        defaultContentRegion: \"content\",\n        confirmPassword: true,\n        enablePasswordChange: true,\n        enforceEmailVerification: false,\n        forbidClientAccountCreation: false,\n        overrideLoginErrors: true,\n        sendVerificationEmail: true,\n        lowercaseUsername: true,\n        focusFirstInput: true,\n\n        showAddRemoveServices: true,\n        showForgotPasswordLink: true,\n        showLabels: true,\n        showPlaceholders: true,\n        showResendVerificationEmailLink: true,\n\n        continuousValidation: true,\n        negativeFeedback: true,\n        negativeValidation: true,\n        positiveValidation: true,\n        positiveFeedback: true,\n        showValidating: true,\n\n        homeRoutePath: \"/user/dashboard\",\n        redirectTimeout: 4000,\n\n        onLogoutHook: () => { FlowRouter.go(\"/\"); },\n        onSubmitHook: (err, state) => {\n            if(!err){\n                if(state === \"changePwd\"){\n                    swal({\n                        title: \"Changed Password\",\n                        text: \"Your account password has been changed.\",\n                        type: \"success\"\n                    }, () => {\n                        FlowRouter.go(\"/user/dashboard\");\n                    });\n                    return false;\n                } else if (state === \"resetPwd\"){\n                    FlowRouter.go(\"/user/dashboard\");\n                } else if (state === \"signIn\"){\n                    FlowRouter.go(\"/user/dashboard\");\n                } else if (state === \"signUp\"){\n                    FlowRouter.go(\"/user/dashboard\");\n                }\n            }\n        },\n        postSignUpHook: (userId) => {\n            // Running on server-side, see https://github.com/meteor-useraccounts/core/blob/master/Guide.md\n            Meteor.users.update({_id: userId}, {$set:\n            {\"profile.totalHours\": 0, \"profile.credits\": 5, \"profile.history\": [\n                {\n                    \"_id\" : new Mongo.ObjectID()._str,\n                    \"timestamp\" : moment().unix(),\n                    \"opportunity\" : \"Signup Bonus\",\n                    \"length\" : -1,\n                    \"credits\" : 5,\n                    \"validator\" : undefined,\n                    \"status\" : 1,\n                    \"new\" : false,\n                    \"comment\" : \"\"\n                }\n            ], \"profile.firstLogin\": true}}\n            );\n        },\n\n        // Texts\n        texts: {\n            button: {\n                signUp: \"Register Now!\"\n            },\n            title: {\n                forgotPwd: \"\",\n                signIn: \"\",\n                signUp: \"\",\n                verifyEmail: \"\",\n                resetPwd: \"\",\n                changePwd: \"\"\n\n            },\n            errors: {\n                captchaVerification: \"Captcha verification failed!\",\n                loginForbidden: \"Incorrect Email or Password\",\n                mustBeLoggedIn: \"Must be logged in to access this page\"\n            }\n        },\n        reCaptcha: {\n            siteKey: Meteor.settings.public.reCaptcha.siteKey,\n            theme: \"light\",\n            data_type: \"image\"\n        },\n        showReCaptcha: true\n    });\n\n    let email = AccountsTemplates.removeField(\"email\");\n    let password = AccountsTemplates.removeField(\"password\");\n\n    AccountsTemplates.addField({\n        _id: \"name\",\n        type: \"text\",\n        displayName: \"Name\",\n        required: true\n    });\n\n    AccountsTemplates.addField(email);\n    AccountsTemplates.addField({\n        _id: \"password\",\n        type: \"password\",\n        required: true,\n        minLength: 6,\n        re: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/,\n        errStr: \"At least 6 characters, one letter, and one number\"\n    });\n};","import { getNav, getLayout } from \"../util/layout.js\";\n\nexport default () => {\n\n    /**\n     * Redirect user to page previously attempting to access after logging in (stored in \"redirectAfterLogin\" session variable)\n     */\n    Accounts.onLogin(() => {\n        var redirect;\n        redirect = Session.get(\"redirectAfterLogin\");\n        if (redirect != null) {\n            if (redirect !== \"/login\") {\n                return FlowRouter.go(redirect);\n            }\n        }\n    });\n\n    // All routes accessed not logged in\n    AccountsTemplates.configureRoute(\"forgotPwd\", {\n        layoutRegions: {\n            attr: {\n                title: \"Reset Password\"\n            }\n        }\n    });\n    AccountsTemplates.configureRoute(\"resetPwd\");\n    AccountsTemplates.configureRoute(\"signIn\", {\n        layoutRegions: {\n            attr: {\n                title: \"Sign In\"\n            }\n        }\n    });\n    AccountsTemplates.configureRoute(\"signUp\", {\n        layoutRegions: {\n            attr: {\n                title: \"Create an Account\",\n                subtitle: \"Get started today!\"\n            }\n        }\n    });\n\n    // Change password route\n    AccountsTemplates.configureRoute(\"changePwd\", {\n        path: \"/change-password\",\n        layoutTemplate: getLayout(),\n        layoutRegions: {\n            nav: getNav(),\n            attr: {\n                title: \"Change Password\"\n            }\n        }\n    });\n\n    // Allow /sign-out route for links\n    FlowRouter.route(\"/sign-out\", {\n        action() {\n            AccountsTemplates.logout();\n            FlowRouter.redirect(\"/\");\n        },\n        name: \"logout\"\n    });\n};","export default () => {\n    var organizationRoutes = FlowRouter.group({\n        prefix: \"/organization\",\n        triggersEnter: [\n            (ctx, redirect) => {\n                var route;\n                if (!(Meteor.loggingIn() || Meteor.userId())) {\n                    route = FlowRouter.current();\n                    if (route.route.name !== \"login\") {\n                        Session.set(\"redirectAfterLogin\", route.path);\n                    }\n                    redirect(\"/sign-in\");\n                } else if (!Roles.userIsInRole(Meteor.userId(), \"organization\")) {\n                    redirect(\"/user/dashboard\");\n                } else {\n                    $(\"body\").css(\"padding-top\", 0);\n                }\n            }\n        ],\n        triggersExit: [\n            () => {\n                $(\"body\").css(\"padding-top\", \"\");\n            }\n        ]\n    });\n\n    organizationRoutes.route(\"/dashboard\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"organizationDashboard\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"organizationDashboard\"\n    });\n\n    organizationRoutes.route(\"/account-settings\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"accountSettingsOrganization\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"accountSettings\"\n    });\n\n    organizationRoutes.route(\"/opportunities\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"organizationOpportunities\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"organizationOpportunities\"\n    });\n\n    organizationRoutes.route(\"/validate\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"validateCredits\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"validateCredits\"\n    });\n\n    organizationRoutes.route(\"/accounts\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"organizationAccounts\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"organizationAccounts\"\n    });\n\n    organizationRoutes.route(\"/settings\", {\n        action() {\n            BlazeLayout.render(\"fullWidthLayout\", {\n                content: \"organizationSettings\",\n                nav: \"organizationNav\"\n            });\n        },\n        name: \"organizationSettings\"\n    });\n};","import { getNav, getLayout } from \"../util/layout.js\";\n\nexport default () => {\n    var publicRoutes = FlowRouter.group({});\n    publicRoutes.route(\"/\", {\n        action() {\n            BlazeLayout.render(\"home\");\n        },\n        name: \"home\"\n    });\n\n    publicRoutes.route(\"/features\", {\n        action() {\n            BlazeLayout.render(\"publicLayout\", {\n                content: \"features\",\n                attr: {\n                    title: \"Features\",\n                    subtitle: \"\"\n                }\n            });\n        },\n        name: \"features\"\n    });\n\n    publicRoutes.route(\"/sponsor\", {\n        action() {\n            BlazeLayout.render(\"publicLayout\", {\n                content: \"sponsor\",\n                attr: {\n                    title: \"Sponsor\",\n                    subtitle: \"\"\n                }\n            });\n        },\n        name: \"sponsor\"\n    });\n\n    publicRoutes.route(\"/organizations\", {\n        action() {\n            BlazeLayout.render(\"publicLayout\", {\n                content: \"organizations\",\n                attr: {\n                    title: \"Organizations\",\n                    subtitle: \"\"\n                }\n            });\n        },\n        name: \"organizations\"\n    });\n\n    publicRoutes.route(\"/contact\", {\n        action() {\n            if(!Meteor.user()){\n                BlazeLayout.render(\"publicLayout\", {\n                    content: \"contact\",\n                    attr: {\n                        title: \"Contact Us\"\n                    }\n                });\n            } else if(Roles.userIsInRole(Meteor.user(), \"organization\")) {\n                BlazeLayout.render(\"fullWidthLayout\", {\n                    nav: \"organizationNav\",\n                    content: \"contact\",\n                    attr: {\n                        title: \"Contact Us\"\n                    }\n                });\n            } else {\n                BlazeLayout.render(\"layout\", {\n                    content: \"contact\",\n                    attr: {\n                        title: \"Contact Us\"\n                    }\n                });\n            }\n        },\n        name: \"contact\"\n    });\n\n    FlowRouter.notFound = {\n        action() {\n            BlazeLayout.render(\"publicLayout\", {\n                content: \"404\"\n            });\n        }\n    };\n};","export default () => {\n    var userRoutes = FlowRouter.group({\n        prefix: \"/user\",\n        triggersEnter: [\n            (ctx, redirect) => {\n                var route;\n                if (!(Meteor.loggingIn() || Meteor.userId())) {\n                    route = FlowRouter.current();\n                    if (route.route.name !== \"login\") {\n                        Session.set(\"redirectAfterLogin\", route.path);\n                    }\n                    redirect(\"/sign-in\");\n                } else if (Roles.userIsInRole(Meteor.userId(), \"organization\")) {\n                    redirect(\"/organization/dashboard\");\n                }\n            }\n        ]\n    });\n\n    userRoutes.route(\"/dashboard\", {\n        action() {\n            BlazeLayout.render(\"layout\", {\n                content: \"dashboard\",\n                attr: {\n                    title: \"Dashboard\"\n                }\n            });\n        },\n        name: \"dashboard\"\n    });\n\n    userRoutes.route(\"/account-settings\", {\n        action() {\n            BlazeLayout.render(\"layout\", {\n                content: \"accountSettings\",\n                attr: {\n                    title: \"Account Settings\"\n                }\n            });\n        },\n        name: \"accountSettings\"\n    });\n\n\n    userRoutes.route(\"/request-credits\", {\n        action() {\n            BlazeLayout.render(\"layout\", {\n                content: \"requestCredits\",\n                attr: {\n                    title: \"Request Credit Validation\",\n                    subtitle: \"After volunteering, the organizer of the volunteer opportunity will validate your credits.\"\n                }\n            });\n        },\n        name: \"requestCredits\"\n    });\n\n    userRoutes.route(\"/redeem-credits\", {\n        subscriptions() {\n            this.register(\"items\", Meteor.subscribe(\"items\"));\n        },\n        action() {\n            BlazeLayout.render(\"layout\", {\n                content: \"redeemCredits\",\n                attr: {\n                    title: \"Redeem Credits\",\n                    subtitle: \"Purchase e-vouchers, coupons, etc. using credits\"\n                }\n            });\n        },\n        name: \"redeemCredits\"\n    });\n\n    userRoutes.route(\"/volunteer-opportunities\", {\n        action() {\n            BlazeLayout.render(\"layout\", {\n                content: \"volunteerOpportunities\",\n                attr: {\n                    title: \"Volunteer Opportunities\",\n                    subtitle: \"Find and sign up for nearby volunteer opportunities.\"\n                }\n            });\n        },\n        name: \"volunteerOpportunities\"\n    });\n};","export function getLayout() {\n    if (!Meteor.userId()) {\n        $(\"body\").css(\"padding-top\", \"\");\n        return \"layout\";\n    } else if (Roles.userIsInRole(Meteor.userId(), \"organization\")) {\n        $(\"body\").css(\"padding-top\", 0);\n        return \"fullWidthLayout\";\n    } else {\n        $(\"body\").css(\"padding-top\", \"\");\n        return \"layout\";\n    }\n}\n\nexport function getNav() {\n    if (!Meteor.userId()) {\n        return \"publicNav\";\n    } else if (Roles.userIsInRole(Meteor.userId(), \"organization\")) {\n        return \"organizationNav\";\n    } else {\n        return \"userNav\";\n    }\n}","export default {\n    name: \"Big Thanks\",\n    description: \"A system which helps encourage citizens to do volunteer work using a credit system which allows them to earn rewards.\"\n};\n","export default () => {\n    if(Meteor.isClient){\n        Meteor.startup(() => {\n            Meteor.setTimeout(() => {\n                //Meteor.call(\"client.restarted\");\n            }, 500);\n        });\n    }\n\n    if(Meteor.isServer){\n        const exec = Npm.require(\"child_process\").exec;\n        Meteor.startup(() => {\n            exec(\"if [ \\\"$(uname)\\\" == \\\"Darwin\\\" ]; then /usr/bin/osascript -e \\\"display notification \\\\\\\"Server Restarted\\\\\\\" with title \\\\\\\"Meteor\\\\\\\"\\\"; fi;\");\n            Meteor.methods({\n                \"client.restarted\"() {\n                    exec(\"if [ \\\"$(uname)\\\" == \\\"Darwin\\\" ]; then /usr/bin/osascript -e \\\"display notification \\\\\\\"Client Restarted\\\\\\\" with title \\\\\\\"Meteor\\\\\\\"\\\"; fi;\");\n                }\n            });\n        });\n    }\n};"]}