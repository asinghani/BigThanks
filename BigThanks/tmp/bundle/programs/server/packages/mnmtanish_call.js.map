{"version":3,"sources":["meteor://ðŸ’»app/packages/mnmtanish_call/packages/mnmtanish_call.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/packages/mnmtanish_call.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/mnmtanish:call/lib/call.js                                    //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nvar calls = {};                                                           // 1\nvar slice = Array.prototype.slice;                                        // 2\n                                                                          // 3\n                                                                          // 4\nCall = function Call (id, name /*, arg1, arg2, ...*/) {                   // 5\n  var call = calls[id];                                                   // 6\n  if(call) {                                                              // 7\n    return call;                                                          // 8\n  }                                                                       // 9\n                                                                          // 10\n  var args = slice.call(arguments, 2);                                    // 11\n  call = new MethodCall(id, name, args);                                  // 12\n  calls[id] = call;                                                       // 13\n  call.update();                                                          // 14\n                                                                          // 15\n  return call;                                                            // 16\n};                                                                        // 17\n                                                                          // 18\nCall.get = function (id) {                                                // 19\n  return calls[id];                                                       // 20\n};                                                                        // 21\n                                                                          // 22\n                                                                          // 23\nMethodCall = function MethodCall (id, name, args) {                       // 24\n  this._id = id;                                                          // 25\n  this._name = name;                                                      // 26\n  this._args = args;                                                      // 27\n  this._error = new ReactiveVar();                                        // 28\n  this._ready = new ReactiveVar();                                        // 29\n  this._result = new ReactiveVar();                                       // 30\n};                                                                        // 31\n                                                                          // 32\nMethodCall.prototype.update = function() {                                // 33\n  var self = this;                                                        // 34\n  self._ready.set(false);                                                 // 35\n  Meteor.apply.call(Meteor, this._name, this._args, function (err, res) { // 36\n    self._ready.set(true);                                                // 37\n    self._error.set(err);                                                 // 38\n    self._result.set(res);                                                // 39\n  });                                                                     // 40\n};                                                                        // 41\n                                                                          // 42\nMethodCall.prototype.error = function() {                                 // 43\n  return this._error.get();                                               // 44\n};                                                                        // 45\n                                                                          // 46\nMethodCall.prototype.ready = function() {                                 // 47\n  return this._ready.get();                                               // 48\n};                                                                        // 49\n                                                                          // 50\nMethodCall.prototype.result = function() {                                // 51\n  return this._result.get();                                              // 52\n};                                                                        // 53\n                                                                          // 54\nMethodCall.prototype.destroy = function() {                               // 55\n  delete calls[this._id];                                                 // 56\n};                                                                        // 57\n                                                                          // 58\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}